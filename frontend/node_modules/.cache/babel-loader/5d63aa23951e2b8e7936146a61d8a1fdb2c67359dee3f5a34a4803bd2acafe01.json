{"ast":null,"code":"const cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      {\n        console.log('add item method called...');\n        console.log(`price : ${action.payload.price} & quantity : ${action.payload.quantity} & state.totalamount : ${state.totalAmount}`);\n        const updatedAmount = state.totalAmount + action.payload.price * action.payload.quantity;\n        console.log(`state.items : ${state.items} & action.payload.id : ${action.payload.id}`);\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n        const existingCartItem = state.items[existingCartItemIndex];\n        let updatedItems;\n        if (existingCartItem) {\n          const updateItem = {\n            ...existingCartItem,\n            quantity: existingCartItem.quantity + action.payload.quantity\n          };\n          updatedItems = [...state.items];\n          updatedItems[existingCartItemIndex] = updateItem;\n        } else {\n          updatedItems = state.items.concat(action.payload);\n        }\n        console.log(`Items in Cart : ${JSON.stringify(updatedItems)} : total amount : ${updatedAmount}`);\n        return {\n          items: updatedItems,\n          totalAmount: updatedAmount\n        };\n      }\n    case 'REMOVE_ITEM':\n      {\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.payload);\n        const existingCartItem = state.items[existingCartItemIndex];\n        const updatedAmount = state.totalAmount - existingCartItem.price;\n        let updatedItems;\n        if (existingCartItem.quantity === 1) {\n          updatedItems = state.items.filter(item => item.id !== action.payload);\n        } else {\n          const updatedItem = {\n            ...existingCartItem,\n            quantity: existingCartItem.quantity - 1\n          };\n          updatedItems = [...state.items];\n          updatedItems[existingCartItemIndex] = updatedItem;\n        }\n        return {\n          items: updatedItems,\n          totalAmount: updatedAmount\n        };\n      }\n    case 'CLEAR_CART':\n      return {\n        items: [],\n        totalAmount: 0\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["cartReducer","state","action","type","console","log","payload","price","quantity","totalAmount","updatedAmount","items","id","existingCartItemIndex","findIndex","item","existingCartItem","updatedItems","updateItem","concat","JSON","stringify","filter","updatedItem"],"sources":["/home/himanshuk/repos/learning/DeliFood/frontend/src/store/cartReducer.js"],"sourcesContent":["const cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM': {\n      console.log('add item method called...')\n      console.log(\n        `price : ${action.payload.price} & quantity : ${action.payload.quantity} & state.totalamount : ${state.totalAmount}`\n      )\n      const updatedAmount =\n        state.totalAmount + action.payload.price * action.payload.quantity\n      console.log(\n        `state.items : ${state.items} & action.payload.id : ${action.payload.id}`\n      )\n      const existingCartItemIndex = state.items.findIndex(\n        (item) => item.id === action.payload.id\n      )\n      const existingCartItem = state.items[existingCartItemIndex]\n\n      let updatedItems\n      if (existingCartItem) {\n        const updateItem = {\n          ...existingCartItem,\n          quantity: existingCartItem.quantity + action.payload.quantity,\n        }\n        updatedItems = [...state.items]\n        updatedItems[existingCartItemIndex] = updateItem\n      } else {\n        updatedItems = state.items.concat(action.payload)\n      }\n      console.log(\n        `Items in Cart : ${JSON.stringify(\n          updatedItems\n        )} : total amount : ${updatedAmount}`\n      )\n      return {\n        items: updatedItems,\n        totalAmount: updatedAmount,\n      }\n    }\n\n    case 'REMOVE_ITEM': {\n      const existingCartItemIndex = state.items.findIndex(\n        (item) => item.id === action.payload\n      )\n      const existingCartItem = state.items[existingCartItemIndex]\n      const updatedAmount = state.totalAmount - existingCartItem.price\n\n      let updatedItems\n      if (existingCartItem.quantity === 1) {\n        updatedItems = state.items.filter((item) => item.id !== action.payload)\n      } else {\n        const updatedItem = {\n          ...existingCartItem,\n          quantity: existingCartItem.quantity - 1,\n        }\n        updatedItems = [...state.items]\n        updatedItems[existingCartItemIndex] = updatedItem\n      }\n\n      return {\n        items: updatedItems,\n        totalAmount: updatedAmount,\n      }\n    }\n\n    case 'CLEAR_CART':\n      return {\n        items: [],\n        totalAmount: 0,\n      }\n\n    default:\n      return {\n        ...state,\n      }\n  }\n}\n\nexport default cartReducer\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MAAE;QACfC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxCD,OAAO,CAACC,GAAG,CACR,WAAUH,MAAM,CAACI,OAAO,CAACC,KAAM,iBAAgBL,MAAM,CAACI,OAAO,CAACE,QAAS,0BAAyBP,KAAK,CAACQ,WAAY,EACrH,CAAC;QACD,MAAMC,aAAa,GACjBT,KAAK,CAACQ,WAAW,GAAGP,MAAM,CAACI,OAAO,CAACC,KAAK,GAAGL,MAAM,CAACI,OAAO,CAACE,QAAQ;QACpEJ,OAAO,CAACC,GAAG,CACR,iBAAgBJ,KAAK,CAACU,KAAM,0BAAyBT,MAAM,CAACI,OAAO,CAACM,EAAG,EAC1E,CAAC;QACD,MAAMC,qBAAqB,GAAGZ,KAAK,CAACU,KAAK,CAACG,SAAS,CAChDC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKV,MAAM,CAACI,OAAO,CAACM,EACvC,CAAC;QACD,MAAMI,gBAAgB,GAAGf,KAAK,CAACU,KAAK,CAACE,qBAAqB,CAAC;QAE3D,IAAII,YAAY;QAChB,IAAID,gBAAgB,EAAE;UACpB,MAAME,UAAU,GAAG;YACjB,GAAGF,gBAAgB;YACnBR,QAAQ,EAAEQ,gBAAgB,CAACR,QAAQ,GAAGN,MAAM,CAACI,OAAO,CAACE;UACvD,CAAC;UACDS,YAAY,GAAG,CAAC,GAAGhB,KAAK,CAACU,KAAK,CAAC;UAC/BM,YAAY,CAACJ,qBAAqB,CAAC,GAAGK,UAAU;QAClD,CAAC,MAAM;UACLD,YAAY,GAAGhB,KAAK,CAACU,KAAK,CAACQ,MAAM,CAACjB,MAAM,CAACI,OAAO,CAAC;QACnD;QACAF,OAAO,CAACC,GAAG,CACR,mBAAkBe,IAAI,CAACC,SAAS,CAC/BJ,YACF,CAAE,qBAAoBP,aAAc,EACtC,CAAC;QACD,OAAO;UACLC,KAAK,EAAEM,YAAY;UACnBR,WAAW,EAAEC;QACf,CAAC;MACH;IAEA,KAAK,aAAa;MAAE;QAClB,MAAMG,qBAAqB,GAAGZ,KAAK,CAACU,KAAK,CAACG,SAAS,CAChDC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKV,MAAM,CAACI,OAC/B,CAAC;QACD,MAAMU,gBAAgB,GAAGf,KAAK,CAACU,KAAK,CAACE,qBAAqB,CAAC;QAC3D,MAAMH,aAAa,GAAGT,KAAK,CAACQ,WAAW,GAAGO,gBAAgB,CAACT,KAAK;QAEhE,IAAIU,YAAY;QAChB,IAAID,gBAAgB,CAACR,QAAQ,KAAK,CAAC,EAAE;UACnCS,YAAY,GAAGhB,KAAK,CAACU,KAAK,CAACW,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKV,MAAM,CAACI,OAAO,CAAC;QACzE,CAAC,MAAM;UACL,MAAMiB,WAAW,GAAG;YAClB,GAAGP,gBAAgB;YACnBR,QAAQ,EAAEQ,gBAAgB,CAACR,QAAQ,GAAG;UACxC,CAAC;UACDS,YAAY,GAAG,CAAC,GAAGhB,KAAK,CAACU,KAAK,CAAC;UAC/BM,YAAY,CAACJ,qBAAqB,CAAC,GAAGU,WAAW;QACnD;QAEA,OAAO;UACLZ,KAAK,EAAEM,YAAY;UACnBR,WAAW,EAAEC;QACf,CAAC;MACH;IAEA,KAAK,YAAY;MACf,OAAO;QACLC,KAAK,EAAE,EAAE;QACTF,WAAW,EAAE;MACf,CAAC;IAEH;MACE,OAAO;QACL,GAAGR;MACL,CAAC;EACL;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}